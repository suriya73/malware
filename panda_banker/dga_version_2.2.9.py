# Panda banker DGA PoC
# Dennis Schwarz, Arbor Networks, ASERT, November 2016

import base64
import hashlib
import json
import struct

from datetime import datetime
from calendar import timegm


def rc4_ksa(key):
    S = []
    for i in range(256):
        S.append(i)

    j = 0 
    for i in range(256):
        j = (j + S[i] + ord(key[i % len(key)])) % 256 
        S = rc4_swap(S, i, j)

    S = [chr(byte) for byte in S]
    S = "".join(S) + "\x00\x00"
    
    return S


def rc4_swap(S, i, j): 
    S[i], S[j] = S[j], S[i] 

    return S


def dga(key, dt, dgaconfig):
    secs_since_epoch = timegm(dt.timetuple())
    # domains update every 3 days instead of everyday
    day_mod = secs_since_epoch - (86400 * (dt.day % 3))

    key0 = struct.unpack("I", key[0:4])[0]

    key0 ^= day_mod

    new_key = struct.pack("I", key0) + key[4:]

    sha256 = hashlib.new("sha256")
    sha256.update(new_key)
    new_key_hash = sha256.digest()

    part1 = new_key_hash[0:5].encode("hex")
    
    url = "%s%s" % (part1, dgaconfig)

    return url


if __name__ == "__main__":
    configs = [
        # md5   81876f471f75a690abbde4de029ba7ab
        {u'key': u'MIIBITANBgkqhkiG9w0BAQEFAAOCAQ4AMIIBCQKCAQB0ctFSn+grpxsXN2eUDbmHtOhlfafrh/dFLWN9Qrq7biqsZJfCuLIdgDAHaGEigCT5mUtvKo8er98nDVsS+Pg0VPwOoipQrwP67bbY5CTSLoOH56oNkDJPl0mn+M53hINqFMS99tSXL+yYae7lWMWhDWHUbQnwRMejXqT5uRpYJCY/cGTItgbR/015FEc7IKplOytGAb5vAcnRkQ1VExs7EUPoGdHVgTZJ/4/W4gPt/bWoMn4Yuqg39yg55BPWI0R9uLMC+zKPOcCyaO1jGgvQx0oagAZC7UFb8SwtFTIdVGdWMyo5ww535+GO0aZLM9a+Us80OHjt0QHrZ3yTjIJDAgMBAAE=', u'dgaconfigs': [u'47.com/rcfig.dat', u'98.net/rcfig.dat', u'10.net/rcong.dat', u'98.net/vgt.dat']},
    ]

    for i in range(11, 12):
        for j in range(1, 31):
            for config in configs:
                for dgaconfig in config["dgaconfigs"]:
                    try:
                        dt = datetime(2016, i, j)
                    except ValueError:
                        continue

                    url = dga(rc4_ksa(base64.b64decode(config["key"])), dt, dgaconfig)
                    #print "%d %d: %s" % (i, j, url.split("/")[0])
                    print url.split("/")[0]
