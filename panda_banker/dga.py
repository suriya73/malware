# Panda banker DGA PoC
# Dennis Schwarz, Arbor Networks, ASERT, September 2016

import base64
import hashlib
import json
import struct

from datetime import datetime
from calendar import timegm


def rc4_ksa(key):
    S = []
    for i in range(256):
        S.append(i)

    j = 0 
    for i in range(256):
        j = (j + S[i] + ord(key[i % len(key)])) % 256 
        S = rc4_swap(S, i, j)

    S = [chr(byte) for byte in S]
    S = "".join(S) + "\x00\x00"
    
    return S


def rc4_swap(S, i, j): 
    S[i], S[j] = S[j], S[i] 

    return S


def dga(key, dt, dgaconfig):
    secs_since_epoch = timegm(dt.timetuple())
    key0 = struct.unpack("I", key[0:4])[0]

    key0 ^= secs_since_epoch

    new_key = struct.pack("I", key0) + key[4:]

    sha256 = hashlib.new("sha256")
    sha256.update(new_key)
    new_key_hash = sha256.digest()

    part1 = new_key_hash[0:5].encode("hex")
    
    url = "%s%s" % (part1, dgaconfig)

    return url


if __name__ == "__main__":
    configs = [
        # md5 eb414d3972889504ab18cc1e2df391f9
        {u'key': u'MIIBITANBgkqhkiG9w0BAQEFAAOCAQ4AMIIBCQKCAQB79idKmV3y/YxvbrOw7gB0zLXCl3f0x1BI3GCeSs6Jand9Iyxs4PHILJhrXlwbwHq5hA+6EuE2ulM/hbsPj04yBSojWuV4hZJP3hHygaaP5SsaMeDm+d7X+MtvA9q+QXUUO4TsoVXy6MRqF/2uVex0YTiRtzHOdDqfHFWlfO8mxq3kM6JQ42c37a/5pfpsLPNWE3QzkDKJfLqNUc3MG7yOfEuH3ivfqANAdMWA6kTBJCgFmWKkH07O/UH02aQJAfnxLCCXHbspy9bl24EIQmT8lb00LpMq0VTWpKXUt7WF7tcQARl3QDLn1fzc5C1UwZrGIG5ppCWvzVXR/t/Evs1RAgMBAAE=', u'dgaconfigs': [u'd4.com/rcnfig.dat', u'78.net/ronfig.dat', u'11.net/rcng.dat', u'19.net/vgt.dat']},
    ]

    for config in configs:
        for dgaconfig in config["dgaconfigs"]:
            dt = datetime(2016, 9, 15)

            url = dga(rc4_ksa(base64.b64decode(config["key"])), dt, dgaconfig)
            print url
